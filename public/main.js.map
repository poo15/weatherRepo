{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/CityWeather.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/current-weather/current-weather.component.css","webpack:///./src/app/current-weather/current-weather.component.html","webpack:///./src/app/current-weather/current-weather.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/weather/weather.component.css","webpack:///./src/app/weather/weather.component.html","webpack:///./src/app/weather/weather.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class CityWeather{\r\n    public cityName:string;\r\n    public temp:string;\r\n    public icon:string;\r\n    public weatherKind:string;\r\n    public tempMax:string;\r\n    public tempMin:string;\r\n    public day:string;\r\n    public precipitation:string;\r\n    public humidity:string;\r\n    public windspeed:string;\r\n    constructor(){}\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n  <div class=\\\"container mt-3\\\">\\n    <fieldset>\\n      <div class=\\\"row\\\" style=\\\"margin-left: 20%\\\">\\n        <div class=\\\"col-lg-8\\\">\\n            \\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]='city' class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"eg. Paris\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-4 \\\" >\\n            <button  (click)=\\\"getWeather()\\\" class=\\\"btn btn-primary\\\">Find</button>\\n        </div>\\n      </div>\\n      \\n    </fieldset>\\n  </div> \\n  <div>\\n      <app-current-weather [currentDay] = currentWeather></app-current-weather>\\n  </div>\\n<div class=\\\"container mt-1\\\" style=\\\"padding-left: 20%\\\">\\n    <table class=\\\"table table-hover\\\" style=\\\"width: 70%\\\">   \\n        <tbody>\\n          <tr class=\\\"\\\" *ngFor=\\\"let dayWeather of forcastWeather;\\\" style=\\\"border-top: 1px solid #333\\\">\\n              <app-weather [forcastWeather] = dayWeather></app-weather>\\n          </tr>\\n        </tbody>\\n    </table> \\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, Output , OnInit} from '@angular/core';\nimport { DataService } from './data.service';\nimport { CityWeather } from './CityWeather';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'weather';\n  city:string;\n  data: any;\n  currentWeather:CityWeather=new CityWeather();\n  forcastWeather:CityWeather[]= [];\n  weekdays:string[]=['Sunday','Monday','Tuesday','Wednesday','Thrusday','Friday','Saturday']\n  months:string[] = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  constructor(private dataService:DataService){\n    console.log(this.forcastWeather)\n  }\n\n\n  ngOnInit(){\n  }\n  \n  \n\n  getWeather(){\n    this.dataService.getForcastWeather(this.city).subscribe( (forcast)=>{\n      this.data = forcast\n      const forcastArray = this.data.forecast.forecastday;\n      this.formCurrentDayWeather(forcast);\n      console.log(this.currentWeather)\n      this.forcastWeather = [];\n      for(let i=0; i< forcastArray.length; i+=1){\n        const tempo = new CityWeather();\n        tempo.day = this.getCurrentDay(forcastArray[i].date);\n        tempo.tempMax  = forcastArray[i].day.maxtemp_c;\n        tempo.tempMin  = forcastArray[i].day.mintemp_c;\n        tempo.weatherKind = forcastArray[i].day.condition.text;\n        tempo.icon = forcastArray[i].day.condition.icon;\n        this.forcastWeather.push(tempo)\n      }\n      this.forcastWeather[0].day='Today';\n    }),\n    (error) => console.log(error);\n  }\n\n  getCurrentDay(date:string){\n    var currentDate = new Date(date);\n    return this.weekdays[currentDate.getDay()]\n  }\n  getCurrentMonth(date:string){\n    var currentDate = new Date(date);\n    return this.months[currentDate.getMonth()]\n  }\n  getCurrentDate(date:string){\n    var currentDate = new Date(date);\n    var todayDate = currentDate.getDate().toString();\n      if(parseInt(todayDate)%10 == 1){\n        todayDate = todayDate+'st';\n      }\n      else if (parseInt(todayDate)%10 == 2){\n        todayDate = todayDate+'nd';\n      }\n      else if (parseInt(todayDate)%10 == 3){\n        todayDate = todayDate+'rd';\n      } else{\n        todayDate = todayDate+'th';\n      }\n      return todayDate;\n    }\n  \n    formCurrentDayWeather(forcast){\n\n    this.data = forcast\n    const forcastArray = this.data.forecast.forecastday;\n    const currentDayWeather = new CityWeather();\n    currentDayWeather.cityName = this.data.location.name+\", \"+ this.data.location.country;\n    currentDayWeather.weatherKind = this.data.current.condition.text;\n    currentDayWeather.icon = this.data.current.condition.icon;\n    currentDayWeather.temp = this.data.current.temp_c\n    currentDayWeather.precipitation = this.data.current.precip_mm;\n    currentDayWeather.humidity = this.data.current.humidity;\n    currentDayWeather.windspeed = this.data.current.wind_mph;\n    currentDayWeather.day = this.getCurrentDay(this.data.current.last_updated)+\", \"\n                            +this.getCurrentMonth(this.data.current.last_updated)+\" \"\n                            +this.getCurrentDate(this.data.current.last_updated);\n    this.currentWeather = currentDayWeather;\n   \n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { DataService } from './data.service';\nimport { FormsModule} from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\n\nimport {HttpClientModule} from '@angular/common/http';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent,\n    NavbarComponent,\n    CurrentWeatherComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule ,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbnQtd2VhdGhlci9jdXJyZW50LXdlYXRoZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-left: 24%\\\" *ngIf=\\\"currentDay.cityName\\\">\\n    <h2>\\n        {{currentDay.cityName}}\\n    </h2>    \\n<p class=\\\"text-primary\\\">{{currentDay.day}}</p>\\n<p class=\\\"text-primary\\\">{{currentDay.weatherKind}}</p>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\">\\n      <img src=\\\"{{currentDay.icon}}\\\" alt=\\\"\\\">{{currentDay.temp}}&#8451;\\n     \\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n      <p class=\\\"text-primary\\\">Humidity:- {{currentDay.humidity}}%</p>\\n      <p class=\\\"text-primary\\\">Wind Speed:- {{currentDay.windspeed}} mph</p>\\n      <p class=\\\"text-primary\\\">Precipitation:- {{currentDay.precipitation}}%</p>\\n  </div>\\n</div>\\n</div>\\n\"","import { Component, OnInit , Input} from '@angular/core';\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.css']\n})\nexport class CurrentWeatherComponent implements OnInit {\n  @Input() currentDay;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { CityWeather } from './CityWeather';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  current:CityWeather = new CityWeather();\n  constructor(private http: HttpClient) { }\n  \n \n\n  getForcastWeather(city:string){\n    return this.http.get(`http://api.apixu.com/v1/forecast.json?key=525cf8e14125477ab5e152638191704&q=${city}&days=7`);\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Weather App</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  </nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlYXRoZXIvd2VhdGhlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<tr >\\n    <th class=\\\"pr-5\\\">{{forcastWeather.day}}</th>\\n    <th class=\\\"pr-5\\\"><img src=\\\"{{forcastWeather.icon}}\\\" alt=\\\"\\\"></th>\\n    <th class=\\\"pr-5\\\">\\n        <tr >{{forcastWeather.tempMax}} &#8451;</tr>\\n        <tr class=\\\"text-muted\\\">{{forcastWeather.tempMin}} &#176;</tr>\\n    </th>\\n    <th >{{forcastWeather.weatherKind}}</th>\\n</tr>\\n\"","import { Component, OnInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent implements OnInit {\n\n  @Input() forcastWeather\n  constructor() {\n    console.log(this.forcastWeather)\n   }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}